version: '3.8'

services:
  web:
    build: .
    env_file: .env # This line is not really needed because I am populating the environment variables directly in the py file (but copilot really wants me to do this)
    ports:
      - '8080:8080'
    environment:
      PORT: 8080
      FLASK_ENV: production
      FLASK_DEBUG: 'False'
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/login" ]
      interval: 5s
      timeout: 2s
      retries: 5
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy
    labels:
      - "promtail=true"
  database:
    image: "mysql"
    environment:
      MYSQL_ROOT_PASSWORD: Kraujinieks123
      MYSQL_DATABASE: db
      MYSQL_USER: user
      MYSQL_PASSWORD: userpass
    volumes:
      - my-db:/var/lib/mysql
      - ./db_seed.sql:/docker-entrypoint-initdb.d/01-seed.sql
    healthcheck:
      test: [ "CMD-SHELL", "mysqladmin ping -h localhost -u root -pKraujinieks123 || exit 1" ]
      interval: 5s
      timeout: 5s
      retries: 5
      # start_period: 30s what the helly is this?
    restart: unless-stopped

  loki:
    image: grafana/loki:2.9.0
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki/loki-config.yaml:/etc/loki/local-config.yaml
    restart: unless-stopped

  promtail:
    image: grafana/promtail:2.9.0
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./loki/promtail-config.yaml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    restart: unless-stopped

volumes:
  my-db:
